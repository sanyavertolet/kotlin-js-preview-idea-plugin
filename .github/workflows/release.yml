name: 'Release'

on:
  push:
    tags:
      - 'v*'

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.welcome=never
  GPG_SEC: ${{ secrets.PRIVATE_KEY }}
  GPG_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}

jobs:
  release:
    name: 'Release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Set up Java 17'
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
          java-package: jdk+fx

      - name: 'Cache ~/.konan'
        id: cache-konan
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}-release
          restore-keys: |
            ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties') }}-
            ${{ runner.os }}-konan-

      - name: 'Publish a release of lib'
        id: publish-core
        uses: gradle/gradle-build-action@v3.3.2
        with:
            gradle-version: wrapper
            arguments: |
                build
                publishAllPublicationsToGitHubRepository
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Publish a release of plugin'
        id: publish-plugin
        uses: gradle/gradle-build-action@v3.3.2
        with:
          gradle-version: wrapper
          arguments: |
            build
            publishPlugin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JB_TOKEN: ${{ secrets.JB_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}

  github_release:
    needs: release
    name: 'Github Release'
    runs-on: ubuntu-latest
    steps:
      - name: 'Github Release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
